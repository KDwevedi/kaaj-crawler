version: '3.9'

services:
  postgres_db:
    container_name: kaaj_postgres
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - kaajdb:/var/lib/postgresql/data
      - ./csv:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: lxelHoPuW2LGn2igy3JcmF4ccBZqO8HVzaHss5MnHc=
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
    networks:
      - app-network

  backend:
    container_name: crawler_backend
    build:
      context: ./crawler
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      SQLALCHEMY_DATABASE_URI: 'postgresql://postgres:lxelHoPuW2LGn2igy3JcmF4ccBZqO8HVzaHss5MnHc=@postgres_db:5432/postgres'
    networks:
      - app-network

  frontend:
    container_name: crawler_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks:
      - app-network

volumes:
  kaajdb:

networks:
  app-network:
